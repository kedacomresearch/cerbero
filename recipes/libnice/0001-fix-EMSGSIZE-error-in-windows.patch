From 76f121c771114e321f937e0d19787e58306d6efa Mon Sep 17 00:00:00 2001
From: Mingyi Zhang <zhangmingyi@kedacom.com>
Date: Tue, 2 Jan 2018 17:54:56 +0800
Subject: [PATCH] fix EMSGSIZE error in windows

---
 agent/pseudotcp.c      |   4 +
 agent/winsock2-errno.h | 242 +++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 246 insertions(+)
 create mode 100644 agent/winsock2-errno.h

diff --git a/agent/pseudotcp.c b/agent/pseudotcp.c
index d57808e..5fada30 100644
--- a/agent/pseudotcp.c
+++ b/agent/pseudotcp.c
@@ -77,6 +77,10 @@
 #include "pseudotcp.h"
 #include "agent-priv.h"
 
+#ifndef EMSGSIZE
+	#include "winsock2-errno.h"
+#endif
+	
 struct _PseudoTcpSocketClass {
     GObjectClass parent_class;
 };
diff --git a/agent/winsock2-errno.h b/agent/winsock2-errno.h
new file mode 100644
index 0000000..f451507
--- /dev/null
+++ b/agent/winsock2-errno.h
@@ -0,0 +1,242 @@
+//porting from winsock2.h
+
+/* Winsock2.h -- definitions to be used with the WinSock 2 DLL and
+ *               WinSock 2 applications.
+ *
+ * This header file corresponds to version 2.2.x of the WinSock API
+ * specification.
+ *
+ * This file includes parts which are Copyright (c) 1982-1986 Regents
+ * of the University of California.  All rights reserved.  The
+ * Berkeley Software License Agreement specifies the terms and
+ * conditions for redistribution.
+ */
+
+#ifndef _WINSOCK2API_ERRNO_
+#define _WINSOCK2API_ERRNO_
+#define _WINSOCK2API_ERRNO_
+
+
+/*
+ * WinSock error codes are also defined in winerror.h
+ * Hence the IFDEF.
+ */
+#ifndef WSABASEERR
+
+/*
+ * All Windows Sockets error constants are biased by WSABASEERR from
+ * the "normal"
+ */
+#define WSABASEERR              10000
+
+/*
+ * Windows Sockets definitions of regular Microsoft C error constants
+ */
+#define WSAEINTR                (WSABASEERR+4)
+#define WSAEBADF                (WSABASEERR+9)
+#define WSAEACCES               (WSABASEERR+13)
+#define WSAEFAULT               (WSABASEERR+14)
+#define WSAEINVAL               (WSABASEERR+22)
+#define WSAEMFILE               (WSABASEERR+24)
+
+/*
+ * Windows Sockets definitions of regular Berkeley error constants
+ */
+#define WSAEWOULDBLOCK          (WSABASEERR+35)
+#define WSAEINPROGRESS          (WSABASEERR+36)
+#define WSAEALREADY             (WSABASEERR+37)
+#define WSAENOTSOCK             (WSABASEERR+38)
+#define WSAEDESTADDRREQ         (WSABASEERR+39)
+#define WSAEMSGSIZE             (WSABASEERR+40)
+#define WSAEPROTOTYPE           (WSABASEERR+41)
+#define WSAENOPROTOOPT          (WSABASEERR+42)
+#define WSAEPROTONOSUPPORT      (WSABASEERR+43)
+#define WSAESOCKTNOSUPPORT      (WSABASEERR+44)
+#define WSAEOPNOTSUPP           (WSABASEERR+45)
+#define WSAEPFNOSUPPORT         (WSABASEERR+46)
+#define WSAEAFNOSUPPORT         (WSABASEERR+47)
+#define WSAEADDRINUSE           (WSABASEERR+48)
+#define WSAEADDRNOTAVAIL        (WSABASEERR+49)
+#define WSAENETDOWN             (WSABASEERR+50)
+#define WSAENETUNREACH          (WSABASEERR+51)
+#define WSAENETRESET            (WSABASEERR+52)
+#define WSAECONNABORTED         (WSABASEERR+53)
+#define WSAECONNRESET           (WSABASEERR+54)
+#define WSAENOBUFS              (WSABASEERR+55)
+#define WSAEISCONN              (WSABASEERR+56)
+#define WSAENOTCONN             (WSABASEERR+57)
+#define WSAESHUTDOWN            (WSABASEERR+58)
+#define WSAETOOMANYREFS         (WSABASEERR+59)
+#define WSAETIMEDOUT            (WSABASEERR+60)
+#define WSAECONNREFUSED         (WSABASEERR+61)
+#define WSAELOOP                (WSABASEERR+62)
+#define WSAENAMETOOLONG         (WSABASEERR+63)
+#define WSAEHOSTDOWN            (WSABASEERR+64)
+#define WSAEHOSTUNREACH         (WSABASEERR+65)
+#define WSAENOTEMPTY            (WSABASEERR+66)
+#define WSAEPROCLIM             (WSABASEERR+67)
+#define WSAEUSERS               (WSABASEERR+68)
+#define WSAEDQUOT               (WSABASEERR+69)
+#define WSAESTALE               (WSABASEERR+70)
+#define WSAEREMOTE              (WSABASEERR+71)
+
+/*
+ * Extended Windows Sockets error constant definitions
+ */
+#define WSASYSNOTREADY          (WSABASEERR+91)
+#define WSAVERNOTSUPPORTED      (WSABASEERR+92)
+#define WSANOTINITIALISED       (WSABASEERR+93)
+#define WSAEDISCON              (WSABASEERR+101)
+#define WSAENOMORE              (WSABASEERR+102)
+#define WSAECANCELLED           (WSABASEERR+103)
+#define WSAEINVALIDPROCTABLE    (WSABASEERR+104)
+#define WSAEINVALIDPROVIDER     (WSABASEERR+105)
+#define WSAEPROVIDERFAILEDINIT  (WSABASEERR+106)
+#define WSASYSCALLFAILURE       (WSABASEERR+107)
+#define WSASERVICE_NOT_FOUND    (WSABASEERR+108)
+#define WSATYPE_NOT_FOUND       (WSABASEERR+109)
+#define WSA_E_NO_MORE           (WSABASEERR+110)
+#define WSA_E_CANCELLED         (WSABASEERR+111)
+#define WSAEREFUSED             (WSABASEERR+112)
+
+/*
+ * Error return codes from gethostbyname() and gethostbyaddr()
+ * (when using the resolver). Note that these errors are
+ * retrieved via WSAGetLastError() and must therefore follow
+ * the rules for avoiding clashes with error numbers from
+ * specific implementations or language run-time systems.
+ * For this reason the codes are based at WSABASEERR+1001.
+ * Note also that [WSA]NO_ADDRESS is defined only for
+ * compatibility purposes.
+ */
+
+/* Authoritative Answer: Host not found */
+#define WSAHOST_NOT_FOUND       (WSABASEERR+1001)
+
+/* Non-Authoritative: Host not found, or SERVERFAIL */
+#define WSATRY_AGAIN            (WSABASEERR+1002)
+
+/* Non-recoverable errors, FORMERR, REFUSED, NOTIMP */
+#define WSANO_RECOVERY          (WSABASEERR+1003)
+
+/* Valid name, no data record of requested type */
+#define WSANO_DATA              (WSABASEERR+1004)
+
+/*
+ * Define QOS related error return codes
+ *
+ */
+#define  WSA_QOS_RECEIVERS               (WSABASEERR + 1005)
+         /* at least one Reserve has arrived */
+#define  WSA_QOS_SENDERS                 (WSABASEERR + 1006)
+         /* at least one Path has arrived */
+#define  WSA_QOS_NO_SENDERS              (WSABASEERR + 1007)
+         /* there are no senders */
+#define  WSA_QOS_NO_RECEIVERS            (WSABASEERR + 1008)
+         /* there are no receivers */
+#define  WSA_QOS_REQUEST_CONFIRMED       (WSABASEERR + 1009)
+         /* Reserve has been confirmed */
+#define  WSA_QOS_ADMISSION_FAILURE       (WSABASEERR + 1010)
+         /* error due to lack of resources */
+#define  WSA_QOS_POLICY_FAILURE          (WSABASEERR + 1011)
+         /* rejected for administrative reasons - bad credentials */
+#define  WSA_QOS_BAD_STYLE               (WSABASEERR + 1012)
+         /* unknown or conflicting style */
+#define  WSA_QOS_BAD_OBJECT              (WSABASEERR + 1013)
+         /* problem with some part of the filterspec or providerspecific
+          * buffer in general */
+#define  WSA_QOS_TRAFFIC_CTRL_ERROR      (WSABASEERR + 1014)
+         /* problem with some part of the flowspec */
+#define  WSA_QOS_GENERIC_ERROR           (WSABASEERR + 1015)
+         /* general error */
+#define  WSA_QOS_ESERVICETYPE            (WSABASEERR + 1016)
+         /* invalid service type in flowspec */
+#define  WSA_QOS_EFLOWSPEC               (WSABASEERR + 1017)
+         /* invalid flowspec */
+#define  WSA_QOS_EPROVSPECBUF            (WSABASEERR + 1018)
+         /* invalid provider specific buffer */
+#define  WSA_QOS_EFILTERSTYLE            (WSABASEERR + 1019)
+         /* invalid filter style */
+#define  WSA_QOS_EFILTERTYPE             (WSABASEERR + 1020)
+         /* invalid filter type */
+#define  WSA_QOS_EFILTERCOUNT            (WSABASEERR + 1021)
+         /* incorrect number of filters */
+#define  WSA_QOS_EOBJLENGTH              (WSABASEERR + 1022)
+         /* invalid object length */
+#define  WSA_QOS_EFLOWCOUNT              (WSABASEERR + 1023)
+         /* incorrect number of flows */
+#define  WSA_QOS_EUNKOWNPSOBJ            (WSABASEERR + 1024)
+         /* unknown object in provider specific buffer */
+#define  WSA_QOS_EPOLICYOBJ              (WSABASEERR + 1025)
+         /* invalid policy object in provider specific buffer */
+#define  WSA_QOS_EFLOWDESC               (WSABASEERR + 1026)
+         /* invalid flow descriptor in the list */
+#define  WSA_QOS_EPSFLOWSPEC             (WSABASEERR + 1027)
+         /* inconsistent flow spec in provider specific buffer */
+#define  WSA_QOS_EPSFILTERSPEC           (WSABASEERR + 1028)
+         /* invalid filter spec in provider specific buffer */
+#define  WSA_QOS_ESDMODEOBJ              (WSABASEERR + 1029)
+         /* invalid shape discard mode object in provider specific buffer */
+#define  WSA_QOS_ESHAPERATEOBJ           (WSABASEERR + 1030)
+         /* invalid shaping rate object in provider specific buffer */
+#define  WSA_QOS_RESERVED_PETYPE         (WSABASEERR + 1031)
+         /* reserved policy element in provider specific buffer */
+
+
+
+/*
+ * WinSock error codes are also defined in winerror.h
+ * Hence the IFDEF.
+ */
+#endif /* ifdef WSABASEERR */
+
+
+/*
+ * Windows Sockets errors redefined as regular Berkeley error constants.
+ * These are commented out in Windows NT to avoid conflicts with errno.h.
+ * Use the WSA constants instead.
+ */
+#ifndef EMSGSIZE
+
+#define EWOULDBLOCK             WSAEWOULDBLOCK
+#define EINPROGRESS             WSAEINPROGRESS
+#define EALREADY                WSAEALREADY
+#define ENOTSOCK                WSAENOTSOCK
+#define EDESTADDRREQ            WSAEDESTADDRREQ
+#define EMSGSIZE                WSAEMSGSIZE
+#define EPROTOTYPE              WSAEPROTOTYPE
+#define ENOPROTOOPT             WSAENOPROTOOPT
+#define EPROTONOSUPPORT         WSAEPROTONOSUPPORT
+#define ESOCKTNOSUPPORT         WSAESOCKTNOSUPPORT
+#define EOPNOTSUPP              WSAEOPNOTSUPP
+#define EPFNOSUPPORT            WSAEPFNOSUPPORT
+#define EAFNOSUPPORT            WSAEAFNOSUPPORT
+#define EADDRINUSE              WSAEADDRINUSE
+#define EADDRNOTAVAIL           WSAEADDRNOTAVAIL
+#define ENETDOWN                WSAENETDOWN
+#define ENETUNREACH             WSAENETUNREACH
+#define ENETRESET               WSAENETRESET
+#define ECONNABORTED            WSAECONNABORTED
+#define ECONNRESET              WSAECONNRESET
+#define ENOBUFS                 WSAENOBUFS
+#define EISCONN                 WSAEISCONN
+#define ENOTCONN                WSAENOTCONN
+#define ESHUTDOWN               WSAESHUTDOWN
+#define ETOOMANYREFS            WSAETOOMANYREFS
+#define ETIMEDOUT               WSAETIMEDOUT
+#define ECONNREFUSED            WSAECONNREFUSED
+#define ELOOP                   WSAELOOP
+#define ENAMETOOLONG            WSAENAMETOOLONG
+#define EHOSTDOWN               WSAEHOSTDOWN
+#define EHOSTUNREACH            WSAEHOSTUNREACH
+#define ENOTEMPTY               WSAENOTEMPTY
+#define EPROCLIM                WSAEPROCLIM
+#define EUSERS                  WSAEUSERS
+#define EDQUOT                  WSAEDQUOT
+#define ESTALE                  WSAESTALE
+#define EREMOTE                 WSAEREMOTE
+#endif
+
+
+#endif  /* _WINSOCK2API_ERRNO_ */
+
-- 
2.15.0.windows.1

